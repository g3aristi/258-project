// Generated by CoffeeScript 1.7.1
var SharedFolderAccessType;

SharedFolderAccessType = (function() {
  function SharedFolderAccessType($access_type_el, ajax_data) {
    this.$access_type_el = $access_type_el;
    this.ajax_data = ajax_data;
    this.bubble_picker = this.$access_type_el.controller();
    this.$access_type_el.on(BubblePicker.CHANGED, (function(_this) {
      return function($j_, data) {
        var access_types, clicked_val, old_val, params, target_name, user;
        old_val = data.old_val;
        clicked_val = data.clicked_val;
        if (old_val === clicked_val) {
          return false;
        }
        if (_this.ajax_data) {
          user = Viewer.get_viewer().get_user_by_id(_this.ajax_data['user_id']);
          params = _this.ajax_data['params'];
          access_types = _this.ajax_data['access_types'];
          target_name = _this.$access_type_el.closest(".bs-row").find(".sf-display-name").text();
          if (access_types[clicked_val] === "owner") {
            _this.show_make_owner_modal(user, params.member_uid, params.ns_id, target_name, clicked_val);
            _this.bubble_picker.set_value(old_val);
          } else {
            _this.update_access_type(user, params, target_name, clicked_val);
          }
        }
        return false;
      };
    })(this));
  }

  SharedFolderAccessType.prototype.show_make_owner_modal = function(user, member_uid, ns_id, member_name, access_type) {
    return DBModalStack.push(new MakeOwnerModal(user, {
      element_id: 'make-owner-confirm-modal',
      member_uid: member_uid,
      member_name: member_name,
      ns_id: ns_id,
      access_type: access_type
    }));
  };

  SharedFolderAccessType.prototype.update_access_type = function(user, params, target_name, access_type) {
    var log_extras, sharing_api, success_cb;
    log_extras = {
      ns_id: params.ns_id,
      access_type: access_type
    };
    success_cb = (function(_this) {
      return function(resp) {
        var modal, msg, response;
        response = JSON.parse(resp.responseText);
        log_extras['member_id'] = params.member_uid;
        if (response.status === 'OK') {
          log_extras["succes"] = true;
          switch (response.access_type) {
            case 'viewer':
              msg = _("%(name)s can only view now.").format({
                name: target_name
              });
              break;
            case 'editor':
              msg = _("%(name)s can edit now.").format({
                name: target_name
              });
              break;
            case 'owner':
              msg = _("%(name)s is the owner now.").format({
                name: target_name
              });
          }
          if (msg) {
            Notify.success(msg);
          }
        } else if (response.status === 'ERROR') {
          log_extras["succes"] = false;
          if (response.msg) {
            log_extras["message"] = response.msg;
            Notify.error(response.msg);
          }
          if (response.reload) {
            modal = DBModal.get_containing_modal(_this.$access_type_el);
            if (modal && modal instanceof DBModalLoading) {
              modal.fetch();
            }
          }
        }
        return analytics.SharedFolderActivityLogger.log("web", "invite_modal_change_callback", user, log_extras);
      };
    })(this);
    sharing_api = new SharingApi(user);
    if (params.member_uid) {
      sharing_api.update_member_access_type(params.ns_id, params.member_uid, access_type, success_cb);
      log_extras["member_uid"] = params.member_uid;
      return analytics.SharedFolderActivityLogger.log("web", "invite_modal_change_collaborator", user, log_extras);
    } else if (params.invite_id) {
      sharing_api.update_invite_access_type(params.invite_id, access_type, success_cb);
      log_extras["invite_id"] = params.invite_id;
      return analytics.SharedFolderActivityLogger.log("web", "invite_modal_change_invite", user, log_extras);
    } else if (params) {
      GroupsApi.change_group_access_type({
        ns_id: params.ns_id,
        group_id: params.group_gid,
        access_type: access_type
      }, success_cb);
      log_extras["group_id"] = params.group_gid;
      return analytics.SharedFolderActivityLogger.log("web", "invite_modal_change_group", user, log_extras);
    }
  };

  return SharedFolderAccessType;

})();

//# sourceMappingURL=sf_access_type.map

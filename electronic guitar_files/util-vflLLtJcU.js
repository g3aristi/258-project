// Generated by CoffeeScript 1.7.1
define(['external/react', 'external/underscore'], function(React, $u) {
  var getText, replaceSubtree;
  getText = function(node) {
    var text_list;
    if (typeof node === 'string') {
      return node;
    }
    if (node.props.text) {
      return node.props.text;
    }
    text_list = [];
    React.Children.forEach(node.props.children, function(child) {
      return text_list.push(getText(child));
    });
    return text_list.join('');
  };
  replaceSubtree = function(node, predicate, transformer) {
    var changed, newChildren;
    if (predicate(node)) {
      return transformer(node);
    } else {
      changed = false;
      newChildren = [];
      React.Children.forEach(node.props.children, (function(_this) {
        return function(c) {
          var newChild;
          newChild = replaceSubtree(c, predicate, transformer);
          newChildren.push(newChild);
          if (newChild !== c) {
            return changed = true;
          }
        };
      })(this));
      if (!changed) {
        return node;
      }
      return React.addons.cloneWithProps(node, {
        children: newChildren
      });
    }
  };
  return {
    getText: getText,
    replaceSubtree: replaceSubtree
  };
});

//# sourceMappingURL=util.map
